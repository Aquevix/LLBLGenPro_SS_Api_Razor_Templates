<# MJC_SS_GeneralMethods #><%
  var currentProject = _executingGenerator.ProjectDefinition;
  var rootNameSpace = _executingGenerator.RootNamespaceToUse;
  var emitForeignKeyFields = true; //currentProject.GetRealBoolSettingValue("EmitForeignKeyFields");
  //-- Multi entity template --
  var entities = _executingGenerator.Entities;

  //-- Single entity template --
  var entity = (EntityDefinition)_activeObject;
  var isSubType = entity.IsSubType;
  var allRelationshipInfosToTraverse = GeneratorUtils.GetAllRelationshipInfosForEntity(_executingGenerator, entity)
                          .Where(ri=>((ri.RelationshipType==EntityRelationshipType.ManyToMany) && 
                                ((IndirectRelationshipEdge)ri.Relationship).IsPureManyToMany) ||
                                ((ri.RelationshipType!=EntityRelationshipType.ManyToMany) && 
                                !ri.NormalRelationship.EntityFkSide.IsPureManyToManyIntermediate))
                          .ToList();
  var entityFields = entity.Fields.Where(f=>!f.IsDiscriminator).OrderBy(f=>f.FieldIndex).ToList();
  if(!emitForeignKeyFields) entityFields = entityFields.Where(f=>!f.IsForeignKeyField || (f.IsForeignKeyField && f.IsPartOfIdentifyingFields)).ToList();
  string propertyAccessor = "public";
  bool emitKnownTypeAttributes = false; //entity.OutputSettingValues.GetRealBoolSettingValue("EmitKnownTypeAttributesForWCF", currentProject);
  //_executingGenerator.StoreValueInRunQueueCache("EntityClassesNamespace", _executingGenerator.RootNamespaceToUse + ".EntityClasses");
  var includeStr = "";
  foreach(var relationshipInfo in allRelationshipInfosToTraverse)
  {
    if(relationshipInfo.NavigatorIsHidden) continue;
    includeStr += relationshipInfo.Navigator.ToLower() + ",";
  }
  includeStr = includeStr.TrimEnd(',');
  var entityBaseUrl = "/" + Pluralize(entity.Name).ToLower();
%>@inherits ViewPage<<%=rootNameSpace%>.Services.<%=entity.Name%>CollectionResponse>

@{
    ViewBag.Title = "<%=TitleCase(entity.Name)%>  Browser";
    Layout = "_Layout";
}  
    
@section Header {
    <link rel="stylesheet" type="text/css" href="/css/plugins.css" />
    <script>
        var dtBaseUrl = '<%=entityBaseUrl%>';
        var dtItemUrl = function (data) { return window.dtBaseUrl + "/" + <%=string.Join(" + \"/\" + ", entity.IdentifyingFields.Select(f => "data["+f.FieldIndex+"]").ToArray())%>; };
        var dtAjaxUrl = '@Html.DataTableAjaxUrl("<%=entityBaseUrl%>/datatable")';
        var dtAllIncludes = '<%=includeStr%>';
        var dtAjaxColumns = [
<%foreach(var field in entityFields){
%>            { "bSortable": <%=IsFieldSortable(field).ToString().ToLower()%>, "bSearchable": <%=IsFieldSearchable(field).ToString().ToLower()%>, "bVisible": <%=IsFieldVisible(field).ToString().ToLower()%> }, // <%=field.Name%> field
<%}%>            { "bSortable": false, "bSearchable": false } // Related field
        ];
    </script>
}
@section Footer {
    <script>
        var fnDoAddItemInit = function (data) {
            $("#modalErrorBlock").hide();
            $("#modalErrorText").text('');
            $("#addEditItemForm").attr("action", dtBaseUrl);
            $("#addEditItemForm").attr("method", "POST");
<%foreach(var field in entityFields){
  if(field.IsReadOnly) {
%>            $("#dis<%=field.Name.ToLower()%>").val("");
            $("#<%=field.Name.ToLower()%>").val("");
<%  }
  else if (IsFieldBinary(field)) {
%>            $("#<%=field.Name.ToLower()%>srcpath").val("");
            $.resetFileInputControl($("#<%=field.Name.ToLower()%>")); //data[<%=field.FieldIndex%>] here doesn't apply
<%  }
  else {
%>            $("#<%=field.Name.ToLower()%>").val("");
<%  }
}%>            $("#addEditModalTitle").text("Add");
        };
        var fnDoEditItemInit = function (data) {
            $("#modalErrorBlock").hide();
            $("#modalErrorText").text('');
            $("#addEditItemForm").attr("action", dtItemUrl(data) + '/update');
            $("#addEditItemForm").attr("method", "POST"); // or PUT without /update trailer in url
<%foreach(var field in entityFields){
  if(field.IsReadOnly) {
%>            $("#dis<%=field.Name.ToLower()%>").val(data[<%=field.FieldIndex%>]);
            $("#<%=field.Name.ToLower()%>").val(data[<%=field.FieldIndex%>]);
<%  }
  else if (IsFieldBinary(field)) {
%>            $("#<%=field.Name.ToLower()%>srcpath").val("");
            $.resetFileInputControl($("#<%=field.Name.ToLower()%>")); //data[<%=field.FieldIndex%>] here doesn't apply
<%  }
  else {
%>            $("#<%=field.Name.ToLower()%>").val(data[<%=field.FieldIndex%>]);
<%  }
}%>            $("#addEditModalTitle").text("Edit");
        };    
    </script>
    <script type="text/javascript" charset="utf-8" language="javascript" src="/js/plugins.js"></script>
    <script type="text/javascript" charset="utf-8" language="javascript" src="/js/scripts.js"></script>
}
<div class="row-fluid">
    <div class="span3">
        @Html.Partial("_EntityNav", "<%=entityBaseUrl%>")
    </div>
    <div class="span9">
        <div class="well">
            <div class="entity-browser">
                <h1>
                    <%=entity.Name%> Browser
                </h1>
                This is where you browse your <%=entity.Name%> entities.
                <a href="<%=entityBaseUrl%>/meta">
                    <span class="label label-info">
                        meta
                    </span>
                </a>&nbsp;
                <a href="<%=entityBaseUrl%>?format=xml">
                    <span class="label label-info">
                        xml
                    </span>
                </a>&nbsp;
                <a href="<%=entityBaseUrl%>?format=json">
                    <span class="label label-info">
                        json
                    </span>
                </a>
            </div>
        </div>
        <div class="row-fluid">
            <ul class="breadcrumb">
              <li><a href="/">Home</a> <span class="divider">/</span></li>
              <li><a href="/entities">Browse</a> <span class="divider">/</span></li>
              <li class="active"><%=TitleCase(Pluralize(entity.Name))%></li>
            </ul>
        </div>
        <div class="row-fluid">
            <div class="span12">
                <div class="alert alert-info options-box" style="display:none;">
                    @*<button type="button" class="close" data-dismiss="alert">&times;</button>*@
                    <h4>Options</h4>
                    Refine your query by using the <strong>filter</strong> query string parameter. Include related items by
                    using the <strong>include</strong> parameter. <br />Browse the <a href="<%=entityBaseUrl%>/meta"><span class="label label-info">meta</span></a>
                    data for this entity to see what fields you can filter on, and what related items can be included.<br />
                    Use the grid controls below for <strong>paging</strong>, <strong>full-text search</strong>, <strong>sorting</strong> and <strong>column selection</strong>.<br />
                    The <strong>relations</strong> options will be supported at a later date.<br />
                    All options are available in the <a href="<%=entityBaseUrl%>?format=xml"><span class="label label-info">xml</span></a> and 
                    <a href="<%=entityBaseUrl%>?format=json"><span class="label label-info">json</span></a> formats, refer to the <a href="http://www.mattjcowan.com/funcoding/2013/03/10/rest-api-with-llblgen-and-servicestack/" target="_blank"><strong>API documentation</strong></a>.
                    <p>
                    <strong>Sample (categories with ids 1 through 6 with a category name containing the letters 'on'):</strong>
                        </p>
                    <code>
                    filter=(^(categoryid:eq:1,2,3,4,5,6)(categoryname:lk:&#34;*on*&#34;))&amp;include=products
                    </code>
                </div>
                <div class="entity-row">
                    <div class="input-prepend input-append pull-left">
                        <span class="add-on"><i class="icon-info-sign"></i> <a href="javascript:void(0);" style="font-weight:bold;" onclick="$('.options-box').toggle();"><%=entityBaseUrl%>?</a></span>
                        <input id="filterText" type="text" value="@Html.DataTableAjaxUrl("").ToString().TrimStart('?')" placeholder="e.g.: filter=(^(Field1:eq:1,2)(Field2:lk:&#34;abc*&#34;))&amp;include=include1,include2">
                        <button class="btn" type="button" onclick="window.location='<%=entityBaseUrl%>?'+$('#filterText').val();">Go!</button>
                    </div>
                    <div class="pull-right">
                        <div class="btn-group input-append input-prepend">
                            <button id="btnAddItem" class="btn" type="button"><i class="icon-plus-sign"></i> Add</button>
                            <button id="btnEditItem" class="btn disabled" disabled="disabled" type="button"><i class="icon-edit"></i> Edit</button>
                            <button id="btnDeleteItem" class="btn disabled" disabled="disabled" type="button"><i class="icon-minus-sign"></i> Delete</button>
                        </div>
                        <div class="btn-group col_vis_menu">
                            <a class="btn btn-inverse dropdown-toggle" href="#" data-toggle="dropdown">Columns <span class="caret"></span></a>
                            <ul id="dt_d_nav" class="dropdown-menu tableMenu">
<%foreach(var field in entityFields){
%>                                <li><label class="checkbox" for="dt_col_<%=(field.FieldIndex+1).ToString()%>"><input id="dt_col_<%=(field.FieldIndex+1).ToString()%>" name="toggle-cols" value="<%=field.FieldIndex.ToString()%>" <%=IsFieldVisible(field)?"CHECKED=\"checked\" ":""%>type="checkbox"> <%=TitleCase(field.Name)%></label></li>
<%}%>                                <li><label class="checkbox" for="dt_col_<%=(entityFields.Count+1).ToString()%>"><input id="dt_col_<%=(entityFields.Count+1).ToString()%>" name="toggle-cols" value="<%=(entityFields.Count).ToString()%>" CHECKED="checked" type="checkbox"> Related</label></li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="entity-row" style="clear:both;width:100%;display:block;">
                    <table cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered" id="entity-grid">
                        <thead>
                            <tr>
<%foreach(var field in entityFields){
%>                                <th><%=TitleCase(field.Name)%></th>
<%}%>                                <th>Related (<a href="javascript:void(0);" id="showCountHref">@if(Html.HttpRequest.AbsoluteUri.IndexOf("include=")==-1){<text>show</text>}else{<text>hide</text>} count</a>)</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td colspan="99">No matching records found</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal hide" id="addEditItemModal">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h3><span id="addEditModalTitle"></span> <%=entity.Name%></h3>
    </div>
    <div class="modal-body">
      <form id="addEditItemForm" class="add-update-item form-horizontal" data-target="#addEditItemModal" action="<%=entityBaseUrl%>" method="POST" enctype="multipart/form-data">
          <fieldset>
              <legend style="display:none;"></legend>

              <div id="modalErrorBlock" class="alert alert-error" style="display:none;">
                  <button type="button" class="close" data-dismiss="alert">&times;</button>
                  <h4>Oops!</h4>
                  <span id="modalErrorText"></span>
              </div>

<%foreach(var field in entityFields){
  if(field.IsReadOnly) {
%>
              <div class="control-group">
                  <label class="control-label" for="dis<%=field.Name.ToLower()%>"><%=TitleCase(field.Name)%></label>
                  <div class="controls">
                      <input type="text" id="dis<%=field.Name.ToLower()%>" name="dis<%=field.Name.ToLower()%>" placeholder="&lt; read only &gt;" disabled="disabled" class="input-xlarge disabled">
                      <input type="hidden" id="<%=field.Name.ToLower()%>" name="<%=field.Name.ToLower()%>" />
                      <p class="help-block"></p>
                  </div>
              </div>
<%  }
  else if (IsFieldBinary(field)) {
%>            
              <div class="control-group">
                  <label class="control-label" for="<%=field.Name.ToLower()%>"><%=TitleCase(field.Name)%></label>
                  <div class="controls">
                      <input class="input-file" id="<%=field.Name.ToLower()%>" name="<%=field.Name.ToLower()%>" type="file" onchange="$('#<%=field.Name.ToLower()%>srcpath').val($(this).val());">
                      <input type="hidden" id="<%=field.Name.ToLower()%>srcpath" name="<%=field.Name.ToLower()%>srcpath" />
                      <p class="help-block"></p>
                  </div>
              </div>
<%  }
  else if (field.FieldType.RepresentedType == typeof(string) && field.MaxLength > 150) {
%>            
              <div class="control-group">
                  <label class="control-label" for="<%=field.Name.ToLower()%>"><%=TitleCase(field.Name)%></label>
                  <div class="controls">
                      <div class="textarea">
                          <textarea id="<%=field.Name.ToLower()%>" name="<%=field.Name.ToLower()%>" type="" class="input-xlarge" maxlength="<%=field.MaxLength%>"></textarea>
                      </div>
                  </div>
              </div>
<%  }
  else {
%>            
              <div class="control-group">
                  <label class="control-label" for="<%=field.Name.ToLower()%>"><%=TitleCase(field.Name)%></label>
                  <div class="controls">
                      <div class="textarea">
                          <input type="text" id="<%=field.Name.ToLower()%>" name="<%=field.Name.ToLower()%>" placeholder="" class="input-xlarge" maxlength="<%=field.MaxLength%>">
                      </div>
                  </div>
              </div>
<%  }
}%>
          </fieldset>
      </form>
    </div>
    <div class="modal-footer">
        <a href="javascript:void(0);" data-dismiss="modal" class="btn">Close</a>
        <input type="button" value="Submit" id="btnCommitAddUpdate" class="btn btn-primary">
    </div>
</div>
 